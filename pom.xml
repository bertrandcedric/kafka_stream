<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.bertrand.cedric</groupId>
    <artifactId>kafka-stream</artifactId>
    <version>1.0</version>
    <prerequisites>
        <maven>3.0</maven>
    </prerequisites>
    <properties>
        <java.version>1.8</java.version>
        <kafka.version>0.10.1.1</kafka.version>
        <logback.version>1.1.3</logback.version>
        <source_path>src/main/none</source_path>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-streams</artifactId>
            <version>${kafka.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
    </dependencies>
    <build>
        <sourceDirectory>${source_path}</sourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>reference.conf</resource>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${main_class}</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>java</id>
            <properties>
                <jetty.version>9.4.2.v20170220</jetty.version>
                <ws.rs.version>2.0.1</ws.rs.version>
                <jersey.version>2.25.1</jersey.version>
                <jackson.version>2.8.7</jackson.version>
                <source_path>src/main/java</source_path>
                <main_class>com.java.kafka.stream.KafkaStream</main_class>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-server</artifactId>
                    <version>${jetty.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-servlet</artifactId>
                    <version>${jetty.version}</version>
                </dependency>
                <dependency>
                    <groupId>javax.ws.rs</groupId>
                    <artifactId>javax.ws.rs-api</artifactId>
                    <version>${ws.rs.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.containers</groupId>
                    <artifactId>jersey-container-servlet-core</artifactId>
                    <version>${jersey.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-json-jackson</artifactId>
                    <version>${jersey.version}</version>
                </dependency>
                <dependency>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                    <version>${jackson.version}</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>scala</id>
            <properties>
                <scala_short.version>2.11</scala_short.version>
                <scala.version>${scala_short.version}.8</scala.version>
                <spray.io.version>1.3.3</spray.io.version>
                <akka.version>2.3.16</akka.version>
                <play.version>2.4.10</play.version>
                <source_path>src/main/scala</source_path>
                <main_class>com.scala.test.KafkaStream</main_class>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.typesafe.play</groupId>
                    <artifactId>play-json_2.11</artifactId>
                    <version>${play.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                    <version>${scala.version}</version>
                </dependency>
                <dependency>
                    <groupId>io.spray</groupId>
                    <artifactId>spray-routing_${scala_short.version}</artifactId>
                    <version>${spray.io.version}</version>
                </dependency>
                <dependency>
                    <groupId>io.spray</groupId>
                    <artifactId>spray-can_${scala_short.version}</artifactId>
                    <version>${spray.io.version}</version>
                </dependency>
                <dependency>
                    <groupId>io.spray</groupId>
                    <artifactId>spray-json_${scala_short.version}</artifactId>
                    <version>${spray.io.version}</version>
                </dependency>
                <dependency>
                    <groupId>com.typesafe.akka</groupId>
                    <artifactId>akka-actor_${scala_short.version}</artifactId>
                    <version>${akka.version}</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.scala-tools</groupId>
                        <artifactId>maven-scala-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>scala-compile</id>
                                <goals>
                                    <goal>compile</goal>
                                    <goal>testCompile</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <args>
                                <arg>-target:jvm-${java.version}</arg>
                            </args>
                            <includes>
                                <include>**/*.scala</include>
                            </includes>
                            <scalaVersion>${scala.version}</scalaVersion>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
